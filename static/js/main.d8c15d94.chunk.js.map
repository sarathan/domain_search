{"version":3,"sources":["component/Data.js","component/utils/sortByTime.js","component/App.js","index.js"],"names":["Data","props","tableData","offSet","items","length","limit","console","log","itemCount","push","react_default","a","createElement","map","value","i","key","data","author","domain","created","toString","sortByTime","formatted","item","Date","parseInt","sort","x","y","App","state","text","isError","errorMessage","handleClick","fetch","_this","then","res","json","result","undefined","children","setState","handlePrev","handleNext","setText","event","target","style","marginBottom","type","this","onChange","onClick","component_Data","Math","round","disabled","React","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.d8c15d94.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Data = (props) => {\r\n    let tableData = [];\r\n    let offSet = (props.offSet < 0 ? 0 : props.offSet > props.items.length ? props.items.length : props.offSet);\r\n    let limit = (props.limit < 0 ? 0 : props.limit > props.items.length ? props.items.length : props.limit);\r\n    console.log(offSet, limit)\r\n    for (let itemCount = offSet; itemCount < limit; itemCount++) {\r\n        tableData.push(props.items[itemCount]);\r\n    }\r\n    //console.log(props)\r\n    return (\r\n        <table>\r\n\r\n            <tbody>\r\n                <tr>\r\n                    <th>Author</th>\r\n                    <th>Domain</th>\r\n                    <th>CREATED</th>\r\n                </tr>\r\n                {\r\n\r\n\r\n                    tableData.map((value, i) => (\r\n                        <tr key={i}>\r\n\r\n                            <td>{value.data.author}</td>\r\n                            <td>{value.data.domain}</td>\r\n                            <td>{value.data.created.toString()}</td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Data;","function sortByTime(items) {\r\n    var formatted = [];\r\n    for (var i = 0; i < items.length; ++i) {\r\n        let item = items[i];\r\n        item.data.created = new Date(parseInt(item.data.created) * 1000);\r\n        formatted.push(item);\r\n    }\r\n    var thesorted = formatted.sort(function (x, y) {\r\n        return y.data.created - x.data.created;\r\n    });\r\n    return thesorted;\r\n}\r\n\r\nexport default sortByTime;","import React from \"react\";\nimport \"./App.css\";\nimport Data from \"./Data\";\nimport sortByTime from \"./utils/sortByTime\";\n\nexport default class App extends React.Component {\n  state = {\n    text: '',\n    items: null,\n    isError: false,\n    errorMessage: null,\n    offSet: 0,\n    limit: 10\n  };\n\n  handleClick = () => {\n    fetch(\"https://www.reddit.com/r/\" + this.state.text + \".json\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          if (result.data !== undefined && result.data.children !== undefined) {\n            this.setState({\n              isError: false,\n              items: sortByTime(result.data.children),\n              offSet: 0,\n              limit: 10\n            });\n          }\n          else {\n            this.setState({\n              isError: true,\n              errorMessage: \"No data found\"\n            });\n          }\n\n        },\n        () => {\n          this.setState({\n            isError: true,\n            errorMessage: \"No data found\"\n          });\n        }\n      )\n  };\n\n  handlePrev = () => {\n    let offSet = this.state.offSet;\n    let limit = this.state.limit;\n    this.setState({\n      offSet: offSet - 10,\n      limit: limit - 10\n    });\n  }\n\n  handleNext = () => {\n    let offSet = this.state.offSet;\n    let limit = this.state.limit;\n    this.setState({\n      offSet: offSet + 10,\n      limit: limit + 10\n    });\n  }\n\n  setText = event => {\n    let text = event.target.value;\n    this.setState({ text });\n\n\n  };\n\n  render() {\n    return (\n      <div>\n        <div style={{ marginBottom: \"10px\" }}>\n          <input type=\"text\" value={this.state.text} onChange={this.setText} />\n          <button onClick={this.handleClick}>SEARCH</button>\n        </div>\n        <br />\n        <div>\n          {!this.state.isError && this.state.items && this.state.items.length > 0 && (\n            <div>\n              <Data {...this.state} />\n              <div>\n                <h1> No of Pages : {Math.round(this.state.items.length / 10)}  </h1>\n                <button disabled={this.state.offSet === 0} onClick={this.handlePrev}>PREV</button>\n                <button disabled={this.state.limit >= this.state.items.length} onClick={this.handleNext}>NEXT</button>\n              </div>\n            </div>)\n          }\n          {this.state.isError && (<div>{this.state.errorMessage}</div>)}\n        </div>\n      </div>\n\n\n\n\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./component/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}